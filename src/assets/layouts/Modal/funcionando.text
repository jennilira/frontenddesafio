import React, { useState, ChangeEvent, FormEvent } from 'react';
import Button from 'react-bootstrap/Button';
import Form from 'react-bootstrap/Form';
import Modal from 'react-bootstrap/Modal';
import 'bootstrap/dist/css/bootstrap.min.css';
import './modal';
import axios from 'axios';

axios.defaults.headers.common['Accept'] = 'application/json';

interface FormValues {
  name: string;
  identifier: string;
  phone_number: string;
  birthdate: string;
  image: File | null | undefined;
}

const Example: React.FC = () => {
  const [show, setShow] = useState(false);
  const handleClose = () => setShow(false);
  const handleShow = () => setShow(true);

  const [formValues, setFormValues] = useState<FormValues>({
    name: '',
    identifier: '',
    phone_number: '',
    birthdate: '',
    image: null,
  });

  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {
    if (e.target.files && e.target.files.length > 0) {
      setFormValues({
        ...formValues,
        image: e.target.files[0],
      });
    } else {
      setFormValues({
        ...formValues,
        [e.target.name]: e.target.value,
      });
    }
  };

  const createPatients = async (e: FormEvent) => {
    e.preventDefault();

    const formData = new FormData();
    formData.append('name', formValues.name);
    formData.append('identifier', formValues.identifier);
    formData.append('birthdate', formValues.birthdate);
    formData.append('phone_number', formValues.phone_number);
    if (formValues.image) {
      formData.append('image', formValues.image);
    }

    try {
      const response = await axios.post('http://localhost:8989/api/patients', formData);
      console.log(response.data.message);
      handleClose(); // Fecha o modal após o envio bem-sucedido
    } catch (error) {
      console.error(error);
    }
  };

  return (
    <>
      <Modal show={show} onHide={handleClose} className="centered">
        <Modal.Header closeButton>
          <Modal.Title>Cadastrar paciente</Modal.Title>
        </Modal.Header>
        <Modal.Body>
          <Form onSubmit={createPatients}>
            <Form.Group className="mb-3" controlId="exampleForm.ControlInput1">
              <Form.Label>Foto do paciente</Form.Label>
              <Form.Control type="file" name="image" onChange={handleChange} autoFocus />
            </Form.Group>
            <Form.Group className="mb-3" controlId="exampleForm.ControlInput1">
              <Form.Label> nomr</Form.Label>
              <Form.Group className="mb-3" controlId="exampleForm.ControlInput1">
              <Form.Label>Nome Completo</Form.Label>
              <Form.Control
                type="text"
                name="name"
                value={formValues.name}
                onChange={handleChange}
                placeholder="Nome completo do paciente"
                autoFocus
              />
              </Form.Group>
            </Form.Group>
            <Form.Group className="mb-3" controlId="exampleForm.ControlInput1">
              <Form.Label>CPF</Form.Label>
              <Form.Control
                type="text"
                name="identifier"
                value={formValues.identifier}
                onChange={handleChange}
                placeholder=""
                autoFocus
              />
            </Form.Group>
            <div className="row row-space">
              <div className="col-6 mb-3">
                <Form.Label>Data de Nascimento</Form.Label>
                <div>
                  <Form.Control
                    type="date"
                    name="birthdate"
                    value={formValues.birthdate}
                    onChange={handleChange}
                    placeholder="Digite a data de nascimento"
                    autoFocus
                  />
                </div>
              </div>
              <div className="col-6 mb-3">
                <Form.Label>Telefone</Form.Label>
                <div>
                  <Form.Control
                    type="text"
                    name="phone_number"
                    value={formValues.phone_number}
                    onChange={handleChange}
                    placeholder="Digite o telefone"
                    autoFocus
                  />
                </div>
              </div>
            </div>
            <Modal.Footer>
              <Button variant="secondary" onClick={handleClose}>
                Fechar
              </Button>
              <Button variant="primary" type="submit"  >
                Salvar
              </Button>
            </Modal.Footer>
          </Form>
        </Modal.Body>
      </Modal>

      <div className="d-flex justify-content-end btn-blue" onClick={handleShow}>
        Novo paciente
      </div>
    </>
  );
};

export default Example;























///aaaaaaaaaaaaaaaaaaaaaaa
   try {
        const response = await axios.post('http://localhost:8989/api/patients', formData);
        console.log(response.data.message)
        setResponse(response);
        // setError(response.data.erros)
        //esse
        // handleClose();
        
        
         // Fecha o modal após o envio bem-sucedido
      } catch (error) {
        if (axios.isAxiosError(error)) {
          const axiosError = error;

          if (axiosError.response && axiosError.response.status === 422) {
            // Acessa o objeto de erros da resposta e define o estado de erros
            // setErrors(axiosError.response.data.errors);
            const errors = axiosError.response.data.mesage;
          } else {
            console.log(errors);
            // Trata outros erros aqui, se necessário
          }
          
        
        }else{
          console.error(error);
        }

           

      }
    },